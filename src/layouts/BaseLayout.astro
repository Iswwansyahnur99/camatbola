---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css'; // Pastikan CSS global terhubung

interface Props {
  title: string;
  description?: string;
  image?: string;
}

const { title, description = 'My News Site - Berita Terkini dan Terpercaya', image = '/social-card.jpg' } = Astro.props;
---

<!DOCTYPE html>
<html lang="id">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />

    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.site).href} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:type" content="website" />

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={new URL(image, Astro.site).href} />
  </head>
  <body>
    <Header />
    <main>
      <slot />
    </main>
    <Footer />

    <script is:inline>
      // Mengecek preferensi sistem atau local storage saat pertama kali dimuat
      const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      };

      const setTheme = (theme) => {
        document.documentElement.className = theme;
        localStorage.setItem('theme', theme);
      };

      setTheme(getThemePreference()); // Set theme saat halaman dimuat

      document.addEventListener('DOMContentLoaded', () => {
        const toggleButton = document.getElementById('theme-toggle');
        if (toggleButton) {
          toggleButton.addEventListener('click', () => {
            const currentTheme = document.documentElement.className;
            const newTheme = currentTheme === 'light' ? 'dark' : 'light';
            setTheme(newTheme);
          });
        }
      });
    </script>
  </body>
</html>
